package isu.taskmanager;

import java.util.ArrayList;
import java.util.ListIterator;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Adam Vanderneut
 */
public class TaskManager extends javax.swing.JFrame {

    ArrayList list; // Array to hold the tasks
    ListIterator li;// ListIterator to interact with the ArrayList

    Task task;      // Current task to be manipulated
    int currentTask;// Task to be drawn by the GUI
    int totalTasks; // Total Number of Tasks

    /**
     * Creates new form TaskManager
     */
    public TaskManager() {
        initComponents();

        list = new ArrayList();
        li = list.listIterator();
        currentTask = 0;
        totalTasks = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName = new javax.swing.JLabel();
        lblDesc = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        scrDesc = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();
        pnlNavigate = new javax.swing.JPanel();
        lblCurTask = new javax.swing.JLabel();
        lblTotTask = new javax.swing.JLabel();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuProgram = new javax.swing.JMenu();
        mnuShowAll = new javax.swing.JMenuItem();
        mnuExit = new javax.swing.JMenuItem();
        mnuEdit = new javax.swing.JMenu();
        mnuReplace = new javax.swing.JMenuItem();
        mnuRemove = new javax.swing.JMenuItem();
        mnuRestore = new javax.swing.JMenuItem();
        mnuClear = new javax.swing.JMenuItem();
        mnuInsert = new javax.swing.JMenu();
        mnuInsBefore = new javax.swing.JMenuItem();
        mnuInsAfter = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Task Manager");

        lblName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblName.setText("Name");

        lblDesc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDesc.setText("Description");

        txtDesc.setColumns(20);
        txtDesc.setRows(5);
        scrDesc.setViewportView(txtDesc);

        pnlNavigate.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblCurTask.setText("Current Task: 0");

        lblTotTask.setText("Total Tasks: 0");

        btnFirst.setText("First");
        btnFirst.setMaximumSize(new java.awt.Dimension(120, 23));
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setText("Previous");
        btnPrev.setMaximumSize(new java.awt.Dimension(120, 23));
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnLast.setText("Last");
        btnLast.setMaximumSize(new java.awt.Dimension(120, 23));
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnNext.setText("Next");
        btnNext.setMaximumSize(new java.awt.Dimension(120, 23));
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNavigateLayout = new javax.swing.GroupLayout(pnlNavigate);
        pnlNavigate.setLayout(pnlNavigateLayout);
        pnlNavigateLayout.setHorizontalGroup(
            pnlNavigateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNavigateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNavigateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlNavigateLayout.createSequentialGroup()
                        .addComponent(lblCurTask)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTotTask))
                    .addGroup(pnlNavigateLayout.createSequentialGroup()
                        .addComponent(btnFirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlNavigateLayout.setVerticalGroup(
            pnlNavigateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNavigateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNavigateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurTask)
                    .addComponent(lblTotTask))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlNavigateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mnuProgram.setText("Program");

        mnuShowAll.setText("Show All Tasks");
        mnuShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuShowAllActionPerformed(evt);
            }
        });
        mnuProgram.add(mnuShowAll);

        mnuExit.setText("Exit");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        mnuProgram.add(mnuExit);

        jMenuBar1.add(mnuProgram);

        mnuEdit.setText("Edit");

        mnuReplace.setText("Replace This as Current Task");
        mnuReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuReplaceActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuReplace);

        mnuRemove.setText("Remove Current Task");
        mnuRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRemoveActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuRemove);

        mnuRestore.setText("Restore Current Task to Screen");
        mnuRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRestoreActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuRestore);

        mnuClear.setText("Clear Screen");
        mnuClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuClearActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuClear);

        jMenuBar1.add(mnuEdit);

        mnuInsert.setText("Insert");

        mnuInsBefore.setText("Before Current Task");
        mnuInsBefore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuInsBeforeActionPerformed(evt);
            }
        });
        mnuInsert.add(mnuInsBefore);

        mnuInsAfter.setText("After Current Task");
        mnuInsAfter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuInsAfterActionPerformed(evt);
            }
        });
        mnuInsert.add(mnuInsAfter);

        jMenuBar1.add(mnuInsert);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlNavigate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrDesc)
                            .addComponent(txtName))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDesc)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scrDesc, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlNavigate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**Inserts information from the frame after the current list item*/
    private void mnuInsAfterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuInsAfterActionPerformed
        // Get data from forms
        String name = txtName.getText();
        String desc = txtDesc.getText();
        Task t = new Task(name, desc);

        // Validate
        if (!t.validateData()) {
            JOptionPane.showMessageDialog(this, "Must enter all information",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Add to List
        if (totalTasks < 0) {
            li.next();// Inserts after current if there's more than one task
        }
        li.add(t);
        li.previous();
        currentTask++;
        totalTasks++;

        // Update forms
        lblTotTask.setText("Total Tasks: " + totalTasks);
        lblCurTask.setText("Current Task: " + currentTask);
        JOptionPane.showMessageDialog(this, "Task Added");
    }//GEN-LAST:event_mnuInsAfterActionPerformed
    
    /**Inserts information from the frame before the current list item*/
    private void mnuInsBeforeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuInsBeforeActionPerformed
        // Get data from forms
        String name = txtName.getText();
        String desc = txtDesc.getText();
        Task t = new Task(name, desc);

        // Validate
        if (!t.validateData()) {
            JOptionPane.showMessageDialog(this, "Must enter all information",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Add to List
        if (totalTasks < 0) {
            li.previous();// Inserts before current if there's more than one task
            li.previous();
        }
        li.add(t);
        li.previous();
        currentTask++;
        totalTasks++;

        // Update forms
        lblTotTask.setText("Total Tasks: " + totalTasks);
        lblCurTask.setText("Current Task: " + currentTask);
        JOptionPane.showMessageDialog(this, "Task Added");
    }//GEN-LAST:event_mnuInsBeforeActionPerformed
    
    /**Replaces a list item*/
    private void mnuReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuReplaceActionPerformed
        // Get data from forms
        String name = txtName.getText();
        String desc = txtDesc.getText();
        Task t = new Task(name, desc);

        // Validate
        if (!t.validateData()) {
            JOptionPane.showMessageDialog(this, "Must enter all information",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Add to List
        li.next();
        li.set(t);
        li.previous();

        // Update forms
        lblTotTask.setText("Total Tasks: " + totalTasks);
        lblCurTask.setText("Current Task: " + currentTask);
        JOptionPane.showMessageDialog(this, "Task Replaced");
    }//GEN-LAST:event_mnuReplaceActionPerformed

    /**Removes a menu item*/
    private void mnuRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRemoveActionPerformed
        if (totalTasks == 0) {
	    return;
	}
	li.next();
	li.remove();
	totalTasks--;
	lblTotTask.setText("Total Tasks: " + totalTasks);   
    }//GEN-LAST:event_mnuRemoveActionPerformed
    
    /**Restores current task to screen*/
    private void mnuRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRestoreActionPerformed
	txtName.setText(((Task)li.next()).getName());
	txtDesc.setText(((Task)li.previous()).getDesc());
    }//GEN-LAST:event_mnuRestoreActionPerformed
    
    /**Clears the screen*/
    private void mnuClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuClearActionPerformed
        // Setting it to null has the same effect as double quotation marks.
	// Looks nicer.
	txtName.setText(null);
	txtDesc.setText(null);
    }//GEN-LAST:event_mnuClearActionPerformed
    
    /**Shows all of the tasks*/
    private void mnuShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuShowAllActionPerformed
        String temp = "";
        for (Object selected : list) {
            temp += selected.toString();
        }
        JOptionPane.showMessageDialog(this, temp, "Tasks", JOptionPane.DEFAULT_OPTION);
    }//GEN-LAST:event_mnuShowAllActionPerformed

    /**Exits the program*/
    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mnuExitActionPerformed

    /**Navigates to the first task*/
    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        if(currentTask == totalTasks) {
	    return;
	}
	while(li.hasPrevious()) {
	    li.previous();
	}
	li.next();
	Task t=(Task)li.previous();
	currentTask = 1;
	lblCurTask.setText("Current Task: " +currentTask);
	txtName.setText(t.getName());
	txtDesc.setText(t.getDesc());
    }//GEN-LAST:event_btnFirstActionPerformed
    
    /**Navigates to the previous task*/
    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
	if (currentTask == 1) {
	    return;
	}
	currentTask--;
	lblCurTask.setText("Current Task: " +currentTask);
	li.previous();
	Task t = (Task)li.next();
	txtName.setText(t.getName());
	txtDesc.setText(t.getDesc());
    }//GEN-LAST:event_btnPrevActionPerformed
    
    /**Navigates to the next task*/
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        if (currentTask == totalTasks) {
	    return;
	}
	currentTask++;
	lblCurTask.setText("Current Task: " + currentTask);
	li.next();
	li.next();
	Task t =(Task)li.previous();
	txtName.setText(t.getName());
	txtDesc.setText(t.getDesc());
    }//GEN-LAST:event_btnNextActionPerformed
    
    /**Navigates to the last task*/
    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        if (currentTask == totalTasks) {
	    return;
	}
	while (li.hasNext()) {
	    li.next();
	}
	Task t = (Task)li.previous();
	currentTask = totalTasks;
	txtName.setText(t.getName());
	txtDesc.setText(t.getDesc());
    }//GEN-LAST:event_btnLastActionPerformed

    
    public static void main(String args[]) {
        /*Set System Look and feel*/
        try {
            UIManager.setLookAndFeel(
                    UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
	    try {
		UIManager.setLookAndFeel("GTK+");
	    } catch (Exception ex) {
		
	    }
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TaskManager().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblCurTask;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTotTask;
    private javax.swing.JMenuItem mnuClear;
    private javax.swing.JMenu mnuEdit;
    private javax.swing.JMenuItem mnuExit;
    private javax.swing.JMenuItem mnuInsAfter;
    private javax.swing.JMenuItem mnuInsBefore;
    private javax.swing.JMenu mnuInsert;
    private javax.swing.JMenu mnuProgram;
    private javax.swing.JMenuItem mnuRemove;
    private javax.swing.JMenuItem mnuReplace;
    private javax.swing.JMenuItem mnuRestore;
    private javax.swing.JMenuItem mnuShowAll;
    private javax.swing.JPanel pnlNavigate;
    private javax.swing.JScrollPane scrDesc;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
